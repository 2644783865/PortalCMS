@model Portal.CMS.Web.Areas.PageBuilder.ViewModels.Section.EditSectionViewModel
@{
    Layout = "";
}

@Scripts.Render("~/Resources/JavaScript/Plugins/ImageSelector")
@Styles.Render("~/Resources/CSS/Spectrum")
@Scripts.Render("~/Resources/JavaScript/Plugins/Spectrum")
@Scripts.Render("~/Resources/JavaScript/Plugins/Pagination")

<script type="text/javascript">
    $(".spectrum").spectrum({
        flat: false,
        showInput: true,
        preferredFormat: "hex",
        showButtons: false,
    });

    $('#customForm').submit(function (e) {
        $.ajax({
            url: this.action,
            type: this.method,
            data: $(this).serialize(),
            cache: false,
            beforeSend: function () {
                setModalEditorContent('<div class="spinner"></div>');
            },
            success: function (result) {
                if (result.State === true)
                {
                    DestroySpectrum();

                    $('#section-wrapper-@Model.SectionId').html(result.SectionMarkup);

                    InitialiseEditor();
                    InitialiseWidgets();
                    InitialiseDroppables();

                    $('.modal').modal('toggle');
                }
                else
                {
                    alert("Error: The document has lost synchronisation. Reloading document...");
                    location.reload();
                }
            }
        });

        DestroySpectrum();

        return false;
    });

    function Delete()
    {
        $('#section-wrapper-@Model.SectionId').slideUp();

        var dataParams = { "pageAssociationId": @Model.PageAssociationId, "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() };

        $.ajax({
            data: dataParams,
            type: 'POST',
            cache: false,
            url: '@Url.Action("Delete", "Section", new { area = "PageBuilder" })',
            success: function (data) {
                if (data.State === false)
                {
                    alert("Error: The document has lost synchronisation. Reloading document...");
                    location.reload();
                }
            },
        });

        DestroySpectrum();
    }

    function DestroySpectrum()
    {
        $(".spectrum").spectrum("destroy");
    }

    $(".checkbox-option").click(function (event) {
        $(".checkbox-option").removeClass("selected");
        $(this).addClass("selected");

        var backgroundType = $(this).attr("data-backgroundtype");
        $('#BackgroundType').val(backgroundType);

        if (backgroundType === "picture")
        {
            $('.panel-colour').slideUp(300);
            $('.panel-picture').slideDown(300);
        }
        else
        {
            $('.panel-picture').slideUp(300);
            $('.panel-colour').slideDown(300);
        }
    });

    var backgroundType = '@Model.BackgroundType';

    if (backgroundType === "background-picture")
    {
        $('.checkbox-option.picture').click();
    }
    else
    {
        $('.checkbox-option.colour').click();
    }
</script>

@using (Html.BeginForm("EditSection", "Section", FormMethod.Post, new { id = "customForm" }))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.SectionId)
    @Html.HiddenFor(x => x.PageAssociationId)
    @Html.HiddenFor(x => x.BackgroundImageId)
    @Html.HiddenFor(x => x.BackgroundType)

    <ul class="nav nav-tabs">
        <li role="presentation" class="active"><a href="#tab-edit" aria-controls="tab-edit" role="tab" data-toggle="tab">Edit Section</a></li>
        <li role="presentation" class=""><a href="#tab-background" aria-controls="tab-background" role="tab" data-toggle="tab">Background<span class="badge">@Model.MediaLibrary.ImageList.Count()</span></a></li>
    </ul>
    <div class="tab-content">

        <div role="tabpanel" class="tab-pane active" id="tab-edit">
            <div class="control-group">
                @Html.LabelFor(x => x.PageSectionHeight)
                @Html.EnumDropDownListFor(m => m.PageSectionHeight, new { @class = "form-control" })
            </div>

            <br />
            <div class="alert alert-warning" role="alert">A user must have at least one of the roles selected below to see this Section. To show the Section to all users select no roles.</div>
            <div class="control-group control-textarea float-container">
                @Html.LabelFor(x => x.SelectedRoleList)
                @Html.ListBoxFor(m => m.SelectedRoleList, Model.RoleList.Select(r => new SelectListItem { Text = r.RoleName, Value = r.RoleName.ToString(), Selected = Model.SelectedRoleList != null && Model.SelectedRoleList.Contains(r.RoleName) }))
            </div>
        </div>

        <div role="tabpanel" class="tab-pane" id="tab-background">
            <div id="banner-selector" class="image-selector x4 single float-container">
                <h4>Background Type</h4>
                <p>Choose whether to use a picture background or a solid colour background for your Section.</p>

                <div class="checkbox-group float-container">
                    <div class="checkbox-option picture" data-backgroundtype="picture"><div class="check"><span class="fa fa-check"></span></div><p>Picture Background</p></div>
                    <div class="checkbox-option colour" data-backgroundtype="colour"><div class="check"><span class="fa fa-check"></span></div><p>Solid Colour</p></div>
                </div>

                <div class="panel panel-picture" style="display: none;">
                    <div class="control-group wide-label">
                        @Html.LabelFor(x => x.PageSectionBackgroundStyle)
                        @Html.EnumDropDownListFor(m => m.PageSectionBackgroundStyle)
                    </div>

                    @Html.Partial("_RenderPage", Model.MediaLibrary)
                </div>

                <div class="panel panel-colour" style="display: none;">
                    <div class="alert alert-warning" role="alert">Pick the colour you want in the background of your selection using the picker below.</div>

                    @Html.ValidationMessage("BackgroundColour")
                    <div class="control-group wide-label">
                        @Html.LabelFor(x => x.BackgroundColour)
                        @Html.TextBoxFor(x => x.BackgroundColour, new { @class = "spectrum" })
                    </div>
                </div>
            </div>
        </div>
    </div>

    <br />

    <div class="footer">
        <button class="btn primary"><span class="fa fa-check"></span><span class="hidden-xs">Save</span></button>
        <button class="btn delete" onclick="Delete();" data-dismiss="modal"><span class="fa fa-trash"></span><span class="hidden-xs">Delete</span></button>
        <button class="btn" data-dismiss="modal" onclick="DestroySpectrum();"><span class="fa fa-times"></span><span class="hidden-xs">Cancel</span></button>
    </div>
}
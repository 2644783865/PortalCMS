@model Portal.CMS.Web.Areas.Builder.ViewModels.Component.AddViewModel
@{
    Layout = "";
}

<div id="component-panel" class="panel-overlay animated fadeInRight">
    <div class="panel-title">
        <h4>Add Component</h4>
        <div class="panel-action" onclick="ClosePanels();"><span class="fa fa-remove"></span></div>
        <div class="panel-action" data-toggle="popover" data-trigger="click" data-container="body" data-placement="bottom" data-title="Add Component" data-content="Simply find a component you want and then drag it onto the section or container you want it to appear in. Changes are saved automatically."><span class="fa fa-info"></span></div>
        <div class="panel-action right" onclick="TogglePanel('section-panel');"><span class="fa fa-columns"></span></div>
    </div>

    <div class="panel-inner">
        <ul class="nav nav-tabs">
            <li role="presentation" class="active"><a href="#tab-text" aria-controls="tab-text" role="tab" data-toggle="tab">Text</a></li>
            <li role="presentation" class=""><a href="#tab-images" aria-controls="tab-images" role="tab" data-toggle="tab">Media</a></li>
            <li role="presentation" class=""><a href="#tab-ui" aria-controls="tab-ui" role="tab" data-toggle="tab">UI</a></li>
            <li role="presentation" class=""><a href="#tab-widget" aria-controls="tab-widget" role="tab" data-toggle="tab">Widgets</a></li>
        </ul>

        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active float-container" id="tab-text">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Text))
                {
                    <div class="component-preview float-container">@Html.Raw(componentType.PageComponentBody)</div>
                }
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-images">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Image))
                {
                    <div class="component-preview border float-container">
                        <div class="component-title">@componentType.PageComponentTypeName</div>
                        @Html.Raw(componentType.PageComponentBody)
                    </div>
                }
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-ui">
                <div class="accordion">
                    <h4>Bootstrap Components</h4>
                    @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Bootstrap))
                    {
                        <div class="component-preview border float-container">
                            <div class="component-title">@componentType.PageComponentTypeName</div>
                            @Html.Raw(componentType.PageComponentBody)
                        </div>
                    }
                    <br />
                    <h4>UI Helpers</h4>
                    @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.UI))
                    {
                        <div class="component-preview border float-container">
                            <div class="component-title">@componentType.PageComponentTypeName</div>
                            @Html.Raw(componentType.PageComponentBody)
                        </div>
                    }
                </div>
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-widget">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Widget))
                {
                    <div class="widget-preview float-container">
                        @Html.Raw(componentType.PageComponentBody)
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $("#component-panel .component-preview, #component-panel .widget-preview").mousedown(function (event) {
            if ($(window).width() < 739) {
                $('#component-panel').fadeOut();
                $('#component-panel').removeClass("visible");
            }
        });

        InitialiseDroppables();

        $(function () {
            $("#component-panel .component-preview *").draggable({
                appendTo: 'body',
                cursor: 'move',
                helper: 'clone',
                revert: 'invalid',
                zIndex: 300
            });
        });

        $(function () {
            $("#component-panel .widget-wrapper").draggable({
                appendTo: 'body',
                cursor: 'move',
                helper: 'clone',
                revert: 'invalid',
                zIndex: 300
            });
        });

        $("#component-panel .component-preview .component-title").draggable({

        });
    });
</script>
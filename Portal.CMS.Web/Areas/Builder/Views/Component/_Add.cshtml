@model Portal.CMS.Web.Areas.Builder.ViewModels.Component.AddViewModel
@{
    Layout = "";
}

<div id="component-panel" draggable="true" class="panel-overlay">
    <div class="panel-title">
        <h4>Add Component</h4>
        <div class="panel-action right" onclick="ToggleComponentPanel();"><span class="glyphicon glyphicon-remove"></span></div>
        <div class="panel-action right" data-toggle="popover" data-trigger="click" data-container="body" data-placement="bottom" data-title="Add Component" data-content="Its easy to add a pre designed section to your page, simply click the one you want to add and it will appear at the bottom of your page."><span class="glyphicon glyphicon-info-sign"></span></div>
    </div>

    <div class="panel-inner">
        <ul class="nav nav-tabs nav-justified">
            <li role="presentation" class="active"><a href="#tab-text" aria-controls="tab-text" role="tab" data-toggle="tab">Text</a></li>
            <li role="presentation" class=""><a href="#tab-images" aria-controls="tab-images" role="tab" data-toggle="tab">Images</a></li>
            <li role="presentation" class=""><a href="#tab-ui" aria-controls="tab-ui" role="tab" data-toggle="tab">UI</a></li>
            <li role="presentation" class=""><a href="#tab-widget" aria-controls="tab-widget" role="tab" data-toggle="tab">Widgets</a></li>
        </ul>

        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active float-container" id="tab-text">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Text))
                {
                    <div class="component-preview float-container">@Html.Raw(componentType.PageComponentBody)</div>
                }
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-bootstrap">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Bootstrap))
                {
                    <div class="component-preview float-container">
                        @Html.Raw(componentType.PageComponentTypeName)
                    </div>
                }
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-images">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Image))
                {
                    <div class="component-preview border float-container">
                        <div class="component-title">@componentType.PageComponentTypeName</div>
                        @Html.Raw(componentType.PageComponentBody)
                    </div>
                }
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-ui">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.UI))
                {
                    <div class="component-preview border float-container">
                        <div class="component-title">@componentType.PageComponentTypeName</div>
                        @Html.Raw(componentType.PageComponentBody)
                    </div>
                }
            </div>
            <div role="tabpanel" class="tab-pane float-container" id="tab-widget">
                @foreach (var componentType in Model.PageComponentTypeList.Where(x => x.PageComponentTypeCategory == Portal.CMS.Entities.Entities.PageBuilder.PageComponentTypeCategory.Widget))
                {
                    <div class="widget-preview float-container">
                        @Html.Raw(componentType.PageComponentBody)
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('.panel-action').popover();

        SetupAddComponentDrawer();

        $(function () {
            $("#component-panel .component-preview *").draggable({
                appendTo: 'body',
                cursor: 'move',
                helper: 'clone',
                revert: 'invalid',
                zIndex: 300
            });
        });

        $(function () {
            $("#component-panel .widget-wrapper").draggable({
                appendTo: 'body',
                cursor: 'move',
                helper: 'clone',
                revert: 'invalid',
                zIndex: 300
            });
        });
    });
</script>
<script type="text/javascript">
    function drag_start(event) {
        var style = window.getComputedStyle(event.target, null);
        event.dataTransfer.setData("text/plain", (parseInt(style.getPropertyValue("left"), 10) - event.clientX) + ',' + (parseInt(style.getPropertyValue("top"), 10) - event.clientY));
    }
    function drag_over(event) {
        event.preventDefault();
        return false;
    }
    function drop(event) {
        var offset = event.dataTransfer.getData("text/plain").split(',');
        var dm = document.getElementById('component-panel');
        dm.style.left = (event.clientX + parseInt(offset[0], 10)) + 'px';
        dm.style.top = (event.clientY + parseInt(offset[1], 10)) + 'px';
        event.preventDefault();
        return false;
    }

    var dm = document.getElementById('component-panel');
    dm.addEventListener('dragstart', drag_start, false);
    document.body.addEventListener('dragover', drag_over, false);
    document.body.addEventListener('drop', drop, false);
</script>
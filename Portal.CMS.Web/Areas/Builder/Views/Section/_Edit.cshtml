@model Portal.CMS.Web.Areas.Builder.ViewModels.Section.EditViewModel
@{
    Layout = "";
    var imageCount = Model.ImageList.Where(x => x.ImageCategory != Portal.CMS.Entities.Entities.Generic.ImageCategory.Icon).Count();
}

@Scripts.Render("~/Resources/JavaScript/ImageSelector")

<script type="text/javascript">
    function Delete()
    {
        $('#section-wrapper-@Model.SectionId').remove();

        var dataParams = { "pageSectionId": @Model.SectionId, "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() };

        $.ajax({
            data: dataParams,
            type: 'POST',
            cache: false,
            url: '@Url.Action("Delete", "Section", new { area = "Builder" })',
            success: function (data) {
                if (data.State === false)
                {
                    alert("Error: The document has lost synchronisation. Reloading document...");
                    location.reload();
                }
            },
        });
    }
</script>

@using (Html.BeginForm("Edit", "Section", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.HiddenFor(x => x.SectionId)
    @Html.HiddenFor(x => x.BackgroundImageId)

    <ul class="nav nav-tabs">
        <li role="presentation" class="active"><a href="#tab-edit" aria-controls="tab-edit" role="tab" data-toggle="tab">Edit Section</a></li>
        <li role="presentation" class=""><a href="#tab-background" aria-controls="tab-background" role="tab" data-toggle="tab">Background Image<span class="badge">@imageCount</span></a></li>
    </ul>
    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="tab-edit">
            <div class="control-group float-container">
                @Html.LabelFor(x => x.PageSectionHeight)
                @Html.EnumDropDownListFor(m => m.PageSectionHeight, new { @class = "form-control" })
            </div>

            <div class="control-group float-container">
                @Html.LabelFor(x => x.PageSectionBackgroundType)
                @Html.EnumDropDownListFor(m => m.PageSectionBackgroundType, new { @class = "form-control" })
            </div>

            <br />
            <div class="alert alert-warning" role="alert">A user must have at least one of the roles selected below to see this Section. To show the Section to all users select no roles.</div>
            <div class="control-group control-textarea float-container">
                @Html.LabelFor(x => x.SelectedRoleList)
                @Html.ListBoxFor(m => m.SelectedRoleList, Model.RoleList.Select(r => new SelectListItem { Text = r.RoleName, Value = r.RoleName.ToString(), Selected = Model.SelectedRoleList != null && Model.SelectedRoleList.Contains(r.RoleName) }))
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="tab-background">
            <div id="banner-selector" class="image-selector x4 single float-container">
                <div class="alert alert-warning" role="alert">Upload new images for use in your pages using the <a href="@Url.Action("Index", "MediaManager", new { area = "Admin" })" class="alert-link">Media Manager</a>.</div>

                @foreach (var image in Model.ImageList.Where(x => x.ImageCategory != Portal.CMS.Entities.Entities.Generic.ImageCategory.Icon))
                {
                    <img class="thumbnail" data-parent="banner-selector" data-target="BackgroundImageId" data-identifier="@image.ImageId" src="@image.ImagePath" />
                }
            </div>
        </div>
    </div>

    <br />

    <div class="footer">
        <button class="btn primary">Save</button>
        <a onclick="Delete();" data-dismiss="modal" class="btn delete">Delete</a>
        <button class="btn" data-dismiss="modal">Cancel</button>
    </div>
}
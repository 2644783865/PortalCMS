@model Portal.CMS.Web.Areas.Admin.ViewModels.ThemeManager.UpsertViewModel
@{
    Layout = "";

    var fontList = Model.FontList.Select(x => new SelectListItem { Value = x.FontId.ToString(), Text = x.FontName });
}

@Styles.Render("~/Resources/CSS/JQuery/JQueryUI")

<script src="https://code.jquery.com/ui/1.12.0-beta.1/jquery-ui.min.js"></script>
<script src="~/Areas/Admin/Content/Scripts/ThemeManager/jquery-sliders.js"></script>

@using (Html.BeginForm("Create", "ThemeManager", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <ul class="nav nav-tabs nav-justified">
        <li role="presentation" class="active"><a href="#tab-theme-details" aria-controls="tab-theme-details" role="tab" data-toggle="tab">Details</a></li>
        <li role="presentation" class=""><a href="#tab-theme-menu" aria-controls="tab-theme-menu" role="tab" data-toggle="tab">Menu</a></li>
        <li role="presentation" class=""><a href="#tab-theme-colour" aria-controls="tab-theme-colour" role="tab" data-toggle="tab">Colour</a></li>
        <li role="presentation" class=""><a href="#tab-theme-text" aria-controls="tab-theme-text" role="tab" data-toggle="tab">Text</a></li>
    </ul>

    <div class="tab-content">
        <div role="tabpanel" class="tab-pane active" id="tab-theme-details">
            <div class="alert alert-warning" role="alert">Once you have created this theme you can make it the default theme. This will update all of your existing pages.</div>

            @Html.ValidationMessage("ThemeName")
            <div class="control-group float-container">
                @Html.LabelFor(x => x.ThemeName)
                @Html.TextBoxFor(x => x.ThemeName)
            </div>
        </div>
        <div role="tabpanel" class="tab-pane" id="tab-theme-menu">
        </div>
        <div role="tabpanel" class="tab-pane" id="tab-theme-colour">
        </div>
        <div role="tabpanel" class="tab-pane" id="tab-theme-text">
            @Html.ValidationMessage("TitleFontId")
            <div class="control-group float-container">
                @Html.LabelFor(x => x.TitleFontId)
                @Html.DropDownListFor(m => m.TitleFontId, fontList)
            </div>

            @Html.ValidationMessage("TextFontId")
            <div class="control-group float-container">
                @Html.LabelFor(x => x.TextFontId)
                @Html.DropDownListFor(m => m.TextFontId, fontList)
            </div>

            <br />

            @Html.ValidationMessage("LargeTitleFontSize")
            <div class="control-group wide-label float-container">
                @Html.LabelFor(x => x.LargeTitleFontSize)
                @Html.TextBoxFor(x => x.LargeTitleFontSize, new { @class = "jquery-slider-value", @data_slider = "largeTitleSlider" })
                <div id="largeTitleSlider" class="jquery-slider-wrapper"><div class="jquery-slider-control" data-parent="LargeTitleFontSize"></div></div>
            </div>

            @Html.ValidationMessage("MediumTitleFontSize")
            <div class="control-group wide-label float-container">
                @Html.LabelFor(x => x.MediumTitleFontSize)
                @Html.TextBoxFor(x => x.MediumTitleFontSize, new { @class = "jquery-slider-value", @data_slider = "mediumTitleSlider" })
                <div id="mediumTitleSlider" class="jquery-slider-wrapper"><div class="jquery-slider-control" data-parent="MediumTitleFontSize"></div></div>
            </div>

            @Html.ValidationMessage("SmallTitleFontSize")
            <div class="control-group wide-label float-container">
                @Html.LabelFor(x => x.SmallTitleFontSize)
                @Html.TextBoxFor(x => x.SmallTitleFontSize, new { @class = "jquery-slider-value", @data_slider = "smallTitleSlider" })
                <div id="smallTitleSlider" class="jquery-slider-wrapper"><div class="jquery-slider-control" data-parent="SmallTitleFontSize"></div></div>
            </div>

            @Html.ValidationMessage("TinyTitleFontSize")
            <div class="control-group wide-label float-container">
                @Html.LabelFor(x => x.TinyTitleFontSize)
                @Html.TextBoxFor(x => x.TinyTitleFontSize, new { @class = "jquery-slider-value", @data_slider = "tinyTitleSlider" })
                <div id="tinyTitleSlider" class="jquery-slider-wrapper"><div class="jquery-slider-control" data-parent="TinyTitleFontSize"></div></div>
            </div>

            @Html.ValidationMessage("TextStandardFontSize")
            <div class="control-group wide-label float-container">
                @Html.LabelFor(x => x.TextStandardFontSize)
                @Html.TextBoxFor(x => x.TextStandardFontSize, new { @class = "jquery-slider-value", @data_slider = "textStandardSlider" })
                <div id="textStandardSlider" class="jquery-slider-wrapper"><div class="jquery-slider-control" data-parent="TextStandardFontSize"></div></div>
            </div>
        </div>
    </div>

    <div class="footer">
        <button class="btn primary">Create Theme</button>
        <button class="btn" data-dismiss="modal">Cancel</button>
    </div>
}
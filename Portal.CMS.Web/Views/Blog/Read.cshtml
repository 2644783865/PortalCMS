@model Portal.CMS.Web.ViewModels.Blog.ReadViewModel
@using Portal.CMS.Entities.Entities.Posts;
@using Portal.CMS.Web.Areas.Admin.Helpers;
@{
    ViewBag.Title = "Read";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var galleryCount = Model.CurrentPost.PostImages.Where(x => x.PostImageType == PostImageType.Gallery).Count();
    var commentCount = Model.CurrentPost.PostComments.Count();
    var recentCount = Model.RecentPosts.Count();
    var similiarCount = Model.SimiliarPosts.Count();

    string bannerImagePath = "";
    if (Model.CurrentPost.PostImages.Any(x => x.PostImageType == PostImageType.Banner))
    {
        bannerImagePath = Model.CurrentPost.PostImages.First(x => x.PostImageType == PostImageType.Banner).Image.ImagePath;
    }
    else
    {
        bannerImagePath = "/Areas/Builder/Content/Images/Sample/Sample-1.jpg";
    }

    var authorAvatarPath = "/Areas/Admin/Content/Images/profile-image-male.png";

    if (!string.IsNullOrWhiteSpace(Model.Author.AvatarImagePath))
    {
        authorAvatarPath = Model.Author.AvatarImagePath;
    }
}

@if (UserHelper.IsAdmin)
{
    <div class="action-container">
        <a href="@Url.Action("Create", "Posts", new { area = "Admin" })" class="launch-modal" data-title="Create Post"><div class="action"><span class="glyphicon glyphicon-plus"></span></div></a>
    </div>
}

<script type="text/javascript">
    $(document).ready(function () {

        var dataParams = { "postId": @Model.CurrentPost.PostId, "referrer": "@Request.UrlReferrer", "__RequestVerificationToken": $('input[name=__RequestVerificationToken]').val() };

        $.ajax({
            data: dataParams,
            type: 'POST',
            cache: false,
            url: '@Url.Action("Analytic", "Blog")',
            success: function (data) {
            },
        });

        tinymce.init({
            selector: '.edit-post-body',
            inline: true,
            plugins: [
              'advlist autolink lists link image charmap anchor',
              'searchreplace visualblocks code fullscreen',
              'media table contextmenu paste'
            ],
            toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
            setup:function(ed) {
                ed.on('change', function(e) {
                    var dataParams = { "postId": 1, "markup": ed.getContent() };
                    $.ajax({
                        data: dataParams,
                        type: 'POST',
                        cache: false,
                        url: '/Admin/Posts/Inline',
                    });
                });
            }
        });
    });
</script>

<div class="post">
    <div class="post-banner" style="@string.Format("background-image: url('{0}'); color: white;", bannerImagePath)">
        <div class="overlay-medium"></div>
        <div class="inner vertical-alignment">
            <div class="row">
                <div class="col-xs-12 col-md-7">
                    <div class="category-item">@Model.CurrentPost.PostCategory.PostCategoryName</div>
                    @if (UserHelper.IsAdmin)
                    {
                        <a href="@Url.Action("Edit", "Posts", new { area = "Admin", postId = Model.CurrentPost.PostId })" class="category-item launch-modal" data-title="Edit Post"><span class="glyphicon glyphicon-pencil"></span>Edit Post</a>
                    }
                    <h1 class="post-title">@Model.CurrentPost.PostTitle</h1>
                    <p class="post-description">@Model.CurrentPost.PostDescription</p>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row">
            <div class="col-xs-12 col-md-7">
                <div class="post-body">
                    <div class="post-details float-container">
                        <img class="pull-left author-image" src="@authorAvatarPath" style="border-radius: 50%;" />
                        <div class="pull-left">
                            <p><strong>Author: </strong>@Model.Author.GivenName @Model.Author.FamilyName</p>
                            <p><strong>Updated: </strong>@Model.CurrentPost.DateUpdated.ToString("dd MMM yyyy HH:mm")</p>
                        </div>
                    </div>
                    <div class="@(UserHelper.IsAdmin ? "edit-post-body" : "")">
                        @Html.Raw(Model.CurrentPost.PostBody)
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-md-5 blog-sidebar">
                <ul class="nav nav-tabs nav-justified">
                    <li role="presentation" class="active"><a href="#tab-comments" aria-controls="tab-comments" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-comment"></span>Comments <span class="hidden-md">(@commentCount)</span></a></li>
                    @if (galleryCount > 0)
                    {
                        <li role="presentation" class=""><a href="#tab-viewgallery" aria-controls="tab-viewgallery" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-picture"></span>Gallery <span class="hidden-md">(@galleryCount)</span></a></li>
                    }
                    <li role="presentation" class=""><a href="#tab-recent-posts" aria-controls="tab-recent-posts" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-time"></span>Recent <span class="hidden-md">(@recentCount)</span></a></li>
                    <li role="presentation" class=""><a href="#tab-similiar-posts" aria-controls="tab-similiar-posts" role="tab" data-toggle="tab"><span class="glyphicon glyphicon-tags"></span>Similiar <span class="hidden-md">(@similiarCount)</span></a></li>
                </ul>
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane active" id="tab-comments">
                        <div class="comment-item">
                            @if (UserHelper.IsLoggedIn)
                            {
                                using (Html.BeginForm("Comment", "Blog", FormMethod.Post))
                                {
                                    @Html.AntiForgeryToken()

                                    @Html.Hidden("postId", Model.CurrentPost.PostId)

                                    <textarea id="commentBody" name="commentBody"></textarea>

                                    <button class="btn btn">Add Comment</button>
                                }
                            }
                            else
                            {
                                <p><span class="glyphicon glyphicon-lock"></span>You need to <a href="@Url.Action("Login", "Authentication", new { area = "Admin" })" class="launch-modal" data-title="Sign In">Login</a> or <a href="@Url.Action("Register", "Authentication", new { area = "Admin" })" class="launch-modal" data-title="Register Account">Register</a> to comment.</p>
                            }
                        </div>

                        @if (!Model.CurrentPost.PostComments.Any())
                        {
                            <div class="float-container comment-item">
                                <h4>No Comments Left Yet</h4>
                                <p>Why not add your own comments or thoughts to get the chat started?</p>
                            </div>
                        }
                        else
                        {
                            foreach (var comment in Model.CurrentPost.PostComments)
                            {
                                <div class="float-container comment-item">
                                    <h4>@comment.User.GivenName @comment.User.FamilyName <span class="small">at @comment.DateAdded.ToString("dd MMM yyyy HH:mm")</span></h4>
                                    <p>@comment.CommentBody</p>
                                </div>
                            }
                        }
                    </div>
                    <div role="tabpanel" class="tab-pane" id="tab-viewgallery">
                        <div class="row image-container x3">
                            @foreach (var image in Model.CurrentPost.PostImages.Where(x => x.PostImageType == PostImageType.Gallery))
                            {
                                <a class="fancybox-thumb" rel="fancybox-thumb" href="@image.Image.ImagePath" title="@Model.CurrentPost.PostTitle">
                                    <img class="thumbnail" src="@image.Image.ImagePath" alt="" />
                                </a>
                            }
                        </div>
                    </div>
                    <div role="tabpanel" class="tab-pane float-container" id="tab-recent-posts">
                        @Html.Partial("_List", Model.RecentPosts)
                    </div>
                    <div role="tabpanel" class="tab-pane float-container" id="tab-similiar-posts">
                        @Html.Partial("_List", Model.SimiliarPosts)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>